getwd()
## Load and install the R packages we might will be using.
pacman::p_load(sf, tidyverse, magrittr, data.table, hrbrthemes, zoo, GWmodel, spatialreg, spdep, plm, splm, pspatreg, zoo, chatgpt)
# Replace the absolute path of the `cities_included.shp` file on your computer.
# Drag the file to terminal (command + space, then search `terminal` on spotlight) if you are in mac, the path will appear.
ct_shape <- st_read("/Users/jialiangchen/Documents/spmodeltoruism/shapefiles/west/west.shp")
## Import more data.
## change the absolute path on your computer, same as above
ct_data <- read.csv("/Users/jialiangchen/Documents/spmodeltoruism/data/dataforR.csv")
## Perform a left join for our datasets.
ct_spdata_wide <- left_join(
ct_shape %>% select(NL_NAME_2, geometry) %>% rename(城市shapefile = NL_NAME_2),
ct_data,
by = "城市shapefile"
)
## Reshape our data to long(tidy) form.
ct_spdata_long <- ct_spdata_wide %>%
pivot_longer(
cols = tarl_2011:grnld_2019,
names_to = c(".value", "year"),
names_pattern = "(.+)_(.+)"
)
## Create average tourist expenditure variable in RMBs
ct_spdata_long %<>%
mutate(
tavexp =  (trev/tarl)*1000,
dmavexp = (dmrev/dmarl)*1000
)
## Some place has zero international arrival
## Avoid division by zero
ct_spdata_long %<>%
mutate(
inavexp = case_when(
inarl > 0 ~  (inrev/inarl)*7*1000,
inarl == 0 ~  0
)
)
## Create average tourist expenditure variable in RMBs## Convert the "human" variables from 10 thousands to thousands, just for consistency
ct_spdata_long %<>%
mutate(emphotel = emphotel * 10,
pop = pop * 10
)
## linear interpolation to deal with missing values
ct_spdata_long %<>%
mutate(across(c(tarl:inavexp), \(x) zoo::na.approx(x, rule = 2)))
## check if there are still NA left
sum(is.na(ct_spdata_long))
## set tell R it is a panel
ct_spdata_long <- pdata.frame(ct_spdata_long, index = c("城市shapefile", "year"))
## summarize the data
summary(ct_spdata_long)
## Load and install the R packages we might will be using.
pacman::p_load(sf, tidyverse, magrittr, data.table, hrbrthemes, zoo, GWmodel, spatialreg, spdep, plm, splm, pspatreg, zoo, chatgpt)
# Replace the absolute path of the `cities_included.shp` file on your computer.
# Drag the file to terminal (command + space, then search `terminal` on spotlight) if you are in mac, the path will appear.
ct_shape <- st_read("/Users/jialiangchen/Documents/spmodeltoruism/shapefiles/west/west.shp")
## Import more data.
## change the absolute path on your computer, same as above
ct_data <- read.csv("/Users/jialiangchen/Documents/spmodeltoruism/data/dataforR.csv")
## Perform a left join for our datasets.
ct_spdata_wide <- left_join(
ct_shape %>% select(NL_NAME_2, geometry) %>% rename(城市shapefile = NL_NAME_2),
ct_data,
by = "城市shapefile"
)
## Reshape our data to long(tidy) form.
ct_spdata_long <- ct_spdata_wide %>%
pivot_longer(
cols = tarl_2011:grnld_2019,
names_to = c(".value", "year"),
names_pattern = "(.+)_(.+)"
)
## Create average tourist expenditure variable in RMBs
ct_spdata_long %<>%
mutate(
tavexp =  (trev/tarl)*1000,
dmavexp = (dmrev/dmarl)*1000
)
## Some place has zero international arrival
## Avoid division by zero
ct_spdata_long %<>%
mutate(
inavexp = case_when(
inarl > 0 ~  (inrev/inarl)*7*1000,
inarl == 0 ~  0
)
)
## Create average tourist expenditure variable in RMBs## Convert the "human" variables from 10 thousands to thousands, just for consistency
ct_spdata_long %<>%
mutate(emphotel = emphotel * 10,
pop = pop * 10
)
## linear interpolation to deal with missing values
ct_spdata_long %<>%
mutate(across(c(tarl:inavexp), \(x) zoo::na.approx(x, rule = 2)))
## check if there are still NA left
sum(is.na(ct_spdata_long))
## set tell R it is a panel
ct_spdata_long <- pdata.frame(ct_spdata_long, index = c("城市shapefile", "year"))
## summarize the data
summary(ct_spdata_long)
## deprecated. 8nn may be too large.
## Identify coordinates of the centroid of the multipolygon
## coords <- st_centroid(st_geometry(ct_spdata_wide))
## Create our 8 NN matrix
## Note that the latitude and longitude are handled using great circle distances
## R2 distances will be inaccurate
## knn8W <- knearneigh(coords, k = 8)
## Convert our knn object to neighborhood list
## list8nn <- knn2nb(knn8W)
## Convert to a matrix object
## matrix8nn <- spdep::nb2mat(list8nn)
## Convert our neighborhood list to an listw object
## listw8nn <- spdep::nb2listw(list8nn)
## Plot the neighborhood relationships
## plot(list8nn, coords)
## Identify coordinates of the centroid of the multipolygon
coords <- st_centroid(st_geometry(ct_spdata_wide))
## Create our 3,4,5,6 NN matrix
## Note that the latitude and longitude are handled using great circle distances
## R2 distances will be inaccurate
knn3W <- knearneigh(coords, k = 3)
knn4W <- knearneigh(coords, k = 4)
knn5W <- knearneigh(coords, k = 5)
knn6W <- knearneigh(coords, k = 6)
## Convert our knn objects to neighborhood list
list3nn <- knn2nb(knn3W)
list4nn <- knn2nb(knn4W)
list5nn <- knn2nb(knn5W)
list6nn <- knn2nb(knn6W)
## Convert to a matrix object
matrix3nn <- spdep::nb2mat(list3nn)
matrix4nn <- spdep::nb2mat(list4nn)
matrix5nn <- spdep::nb2mat(list5nn)
matrix6nn <- spdep::nb2mat(list6nn)
## Convert our neighborhood list to an listw object
listw4nn <- spdep::nb2listw(list4nn)
## Plot the neighborhood relationships
# plot(list4nn, coords)
## Neighbourhood contiguity by distance
d100nb <- dnearneigh(coords, 0, 100)
d150nb <- dnearneigh(coords, 0, 150)
d200nb <- dnearneigh(coords, 0, 200)
summary(d200nb)
## convert them to matrix
d100nb %>% spdep::nb2mat(zero.policy = TRUE) -> matrixd100nb
d150nb %>% spdep::nb2mat(zero.policy = TRUE) -> matrixd150nb
d200nb %>% spdep::nb2mat(zero.policy = TRUE) -> matrixd200nb
## Create another weighting matrix based on contiguity relations (queen).
ct_spdata_wide %>% spdep::poly2nb("geometry") %>%
spdep::nb2mat(zero.policy = TRUE) -> matrixcont
ct_spdata_wide %>% spdep::poly2nb("geometry") %>%  spdep::nb2listw(zero.policy = TRUE) -> listwnb
## Create another weighting matrix based on contiguity relations (rook).
ct_spdata_wide %>% spdep::poly2nb("geometry", queen = FALSE) %>%
spdep::nb2mat(zero.policy = TRUE) -> matrixcont_rk
## Create spatial lag for some variables
lagGDPpc <- slag(ct_spdata_long$GDPpc, listw = listw4nn) %>% as.numeric( )
ct_spdata_long$lagGDPpc <- lagGDPpc
lagslry <- slag(ct_spdata_long$slry, listw = listw4nn) %>% as.numeric( )
ct_spdata_long$lagslry <- lagslry
lagtarl <- slag(ct_spdata_long$tarl, listw = listw4nn) %>% as.numeric( )
ct_spdata_long$lagtarl <- lagtarl
laghotel <- slag(ct_spdata_long$hotel, listw = listw4nn) %>% as.numeric( )
ct_spdata_long$laghotel <- laghotel
lagspot5A <- slag(ct_spdata_long$spot5A, listw = listw4nn) %>% as.numeric( )
ct_spdata_long$lagspot5A <- lagspot5A
lagterti<- slag(ct_spdata_long$terti, listw = listw4nn) %>% as.numeric( )
ct_spdata_long$lagterti <- lagterti
tlaged_logged_ct_spdata_long <- ct_spdata_long
## Use the independent variables from the previous year
for (i in 7:ncol(tlaged_logged_ct_spdata_long)) {
tlaged_logged_ct_spdata_long[[i]] <- lag(tlaged_logged_ct_spdata_long[[i]], 1)
}
summary(tlaged_logged_ct_spdata_long)
## Drop all observations with missing values
tlaged_logged_ct_spdata_long <- na.omit(tlaged_logged_ct_spdata_long)
## Transfer all variables to log scale
tlaged_logged_ct_spdata_long <- tlaged_logged_ct_spdata_long %>%
mutate(across(c(tarl:inrev, hprice:road, invest:lagspot5A), \(x) log(x+1)))
summary(tlaged_logged_ct_spdata_long)
## Create indicators using total arrivals
tlaged_logged_ct_spdata_long <- tlaged_logged_ct_spdata_long %>%
mutate(
indicator_tarl = case_when(
tarl >= lagtarl ~  1,
tarl < lagtarl ~ 0
)
)
## Create indicators using GDP per capita
tlaged_logged_ct_spdata_long <- tlaged_logged_ct_spdata_long %>%
mutate(
indicator_gdp = case_when(
GDPpc >= lagGDPpc ~  1,
GDPpc < lagGDPpc ~ 0
)
)
## Create indicators using number of hotels
tlaged_logged_ct_spdata_long <- tlaged_logged_ct_spdata_long %>%
mutate(
indicator_hotel = case_when(
hotel >= laghotel ~  1,
hotel < laghotel ~ 0
)
)
## Create indicators using number of 5A spots
tlaged_logged_ct_spdata_long <- tlaged_logged_ct_spdata_long %>%
mutate(
indicator_5A = case_when(
spot5A >= lagspot5A ~  1,
spot5A < lagspot5A ~ 0
)
)
## Create indicators using third industry development level
tlaged_logged_ct_spdata_long <- tlaged_logged_ct_spdata_long %>%
mutate(
indicator_terti = case_when(
terti >= lagterti ~  1,
terti < lagterti ~ 0
)
)
summary(tlaged_logged_ct_spdata_long)
View(tlaged_logged_ct_spdata_long)
View(tlaged_logged_ct_spdata_long)
tlaged_logged_ct_spdata_long %>%
as.data.frame() %>%
select(!geometry) %>%
arrange(year, 城市shapefile)  %>%
xlsx::write.xlsx2("/Users/jialiangchen/Documents/spmodeltoruism/codes/regions_2regime/west/west_tlaged_logged_ct_spdata_long.xlsx")
## output weight matrix (4nn)
matrix4nn %>% as.data.frame() %>% write.xlsx2("/Users/jialiangchen/Documents/spmodeltoruism/codes/regions_2regime/west/west4nnmatrix.xlsx")
library(xlsx)
## output weight matrix (4nn)
matrix4nn %>% as.data.frame() %>% write.xlsx2("/Users/jialiangchen/Documents/spmodeltoruism/codes/regions_2regime/west/west4nnmatrix.xlsx")
matrix3nn %>% as.data.frame() %>% write.xlsx2("/Users/jialiangchen/Documents/spmodeltoruism/codes/regions_2regime/west/west3nnmatrix.xlsx")
matrix5nn %>% as.data.frame() %>% write.xlsx2("/Users/jialiangchen/Documents/spmodeltoruism/codes/regions_2regime/west/west5nnmatrix.xlsx")
matrix6nn %>% as.data.frame() %>% write.xlsx2("/Users/jialiangchen/Documents/spmodeltoruism/codes/regions_2regime/west/west6nnmatrix.xlsx")
matrixcont %>% as.data.frame() %>% write.xlsx2("/Users/jialiangchen/Documents/spmodeltoruism/codes/regions_2regime/west/westmatrixcont.xlsx")
matrixcont_rk %>% as.data.frame() %>% write.xlsx2("/Users/jialiangchen/Documents/spmodeltoruism/codes/regions_2regime/west/westmatrixcont_rk.xlsx")
matrixd100nb %>% as.data.frame() %>% write.xlsx2("/Users/jialiangchen/Documents/spmodeltoruism/codes/regions_2regime/west/westmatrixd100nb.xlsx")
matrixd150nb %>% as.data.frame() %>% write.xlsx2("/Users/jialiangchen/Documents/spmodeltoruism/codes/regions_2regime/west/westmatrixd150nb.xlsx")
matrixd200nb %>% as.data.frame() %>% write.xlsx2("/Users/jialiangchen/Documents/spmodeltoruism/codes/regions_2regime/west/westmatrixd200nb.xlsx")
plot(list4nn, coords)
plot(list5nn, coords)
plot(list6nn, coords)
